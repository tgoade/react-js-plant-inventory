@import url('https://fonts.googleapis.com/css2?family=Barlow+Condensed:ital,wght@0,100;0,400;0,500;0,600;0,700;1,100;1,400;1,500;1,600;1,700&family=Beau+Rivage&display=swap');

/*********************** Reset styles ***********************/

/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Remove default margin */
body,
h1,
h2,
h3,
h4,
p,
figure,
blockquote,
dl,
dd {
  margin: 0;
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role='list'],
ol[role='list'] {
  list-style: none;
}

/* Set core root defaults */
html:focus-within {
  scroll-behavior: smooth;
}

/* Set core body defaults */
body {
  font-size: 20px;
  min-height: 100vh;
  text-rendering: optimizeSpeed;
  line-height: 1.5;
  font-family: 'Barlow Condensed', sans-serif;
  background-color: mintcream;
}

/* A elements that don't have a class get default styles */
a:not([class]) {
  text-decoration-skip-ink: auto;
}

/* Make images easier to work with */
img,
picture {
  max-width: 100%;
  display: block;
}

/* Inherit fonts for inputs and buttons */
input,
button,
textarea,
select {
  font: inherit;
}

/********************************************/

$brightgreen: #04a846;
$tableheaders: "", "Plant Name", "Growth Condition", "Max Height", "Tips", "";
$borderradius: 3px, 5px;

%centered {
    text-align: center;
}
%flex-between {
    display: flex;
    justify-content: space-between;
}
%btn {
    padding: 6px 0;
    border-radius: #{nth($borderradius, 2)};
    font-size: 20px;
    color: #fff;
    width: 50%;
    margin-top: 12px;
    cursor: pointer;
    background-color: #04a846;
    border: none;
}
h2 {
    @extend %centered;
    font-family: 'Beau Rivage', cursive;
    font-size: 45px;
    font-weight: 100;
    
}
main {
    margin: 0 auto;
    padding-bottom: 50px;
}
.app-header {
    background: url('../images/head-image.jpg') no-repeat top center;
    background-size: cover;
    padding: 100px 10px 180px;
}
.entry {
    max-width: 1200px;
    margin: 0 auto 50px;
    background-color: #fff;
    border: 1px solid #ced4da;
    padding: 10px 45px 35px;
    border-radius: #{nth($borderradius, 2)};
    box-shadow: 0 1rem 2.5rem rgb(147 157 168 / 22%), 0 0 0 0.1rem rgb(103 110 144 / 4%);
    .cta {
        @extend %centered;
    }    
}
form {
    button {
        @extend %btn;
    }
}
.one-input-row, .two-input-row, .three-input-row {
    margin: 0 0 10px;
}
.two-input-row {
    @extend %flex-between;
    .input-one, .input-two {
        width: 48%;
    }
}
.three-input-row {
    @extend %flex-between;
    .input-one, .input-two, .input-three {
        width: 31%;
    }
}
label {
    font-size: 20px;
    margin-bottom: 2px;
}
input, textarea {
    display: block;
    width: 100%;
    border-radius: 3px;
    border: 1px solid #ced4da;
}  
.inventory {
    max-width: 1200px;
    margin: -130px auto 0;  
    padding-left: 10px;
    padding-right: 10px;
    table {
        width: 100%;
        border: 1px solid #ced4da;
        border-radius: #{nth($borderradius, 2)};
        background-color: #fff;
    }
    thead tr, tr:nth-child(even) {
        background-color: #eee;
    }
    th{
        font-weight: 400;
    }
    th:first-child, td:first-child {
        width: 100px;
    }    
    td {
        @extend %centered;
        padding: 5px 10px;           
        &:nth-child(5) {
            max-width: 200px;
            text-align: left;
        }         
    }
    figure {
        width: 100px;
        max-height: 100px;
        overflow: hidden;
    }
    img {
        max-width: 150px;
        max-height: 150px;
    }
    .far {
        cursor: pointer;
        margin: 0 10px;
    }
}
.video-modal {
    @extend %centered;
    @extend %flex-between;
    margin-top: 100px;
    iframe {
        width: 800px;
        height: 500px;
        margin: 20px;
    }
  }
.hide {
    display: none;
}
#nameValidationError {
    color: #e00;
}
.ReactModal__Content {  
    position: relative;
    max-width: 800px;
    max-height: 500px;
    margin: 0 auto; 
    .cta {
        @extend %centered;
    } 
}
.ReactModal__Overlay {
  background-color: rgba(0, 0, 0, 0.60)!important;
}
.closeModal {
  position: absolute;
  top: 5px;
  right: 25px;
  cursor: pointer;
}
.ReactModal__Overlay {
    background-color: rgba(0, 0, 0, 0.60)!important;
}
.closeModal {
    position: absolute;
    top: 5px;
    right: 25px;
    cursor: pointer;
}
@media only screen and (max-width: 760px){
    /* Force table to not be like tables anymore */
    table, thead, tbody, th, td, tr { 
        display: block; 
    }
    /* Hide table headers (but not display: none;, for accessibility) */
    thead tr { 
        position: absolute;
        top: -9999px;
        left: -9999px;
    }
    .app-header {
        padding: 10px 10px 90px 10px;
    }
    .inventory{
        padding-left: 10px;
        padding-right: 10px;    
        td { 
            /* Behave  like a "row" */
            border: none;
            border-bottom: 1px solid #eee; 
            position: relative;
            padding-left: 35%; 
            text-align: left;
            min-height: 41px;
            &:before { 
                /* Now like a table header */
                position: absolute;
                /* Top/left values mimic padding */
                top: 6px;
                left: 6px;
                width: 45%; 
                text-align: left;
                padding-right: 10px; 
                white-space: nowrap;
            }
            @for $i from 1 through length($tableheaders){
                &:nth-of-type(#{$i}):before {content: "#{nth($tableheaders, $i)}"};
            }
        }    
        th:nth-child(5), td:nth-child(5){
            max-width: none;
        }
        figure {
            margin: 10px 0;
        }
    }
}
@media only screen and (max-width: 400px){
    .two-input-row, .three-input-row {
        flex-direction: column;
        .input-one, .input-two, .input-three{
            width: 100%;
        }
    }
    .inventory {
        td {
            padding-left: 10px;
            min-height: auto;
            @for $i from 1 through length($tableheaders){
                &:nth-of-type(#{$i}):before {content: none};
            }
        }    
    }
}